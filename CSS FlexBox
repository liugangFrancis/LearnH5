### CSS3 弹性盒子：一种用于在页面上布置元素的布局模式，使得当页面布局必须适应不同的屏幕尺寸和不同的显示设备时，元素可预测地运行。
对于许多应用程序，弹性盒子模型提供了对块模型的改进。因为它不适用浮动，flex容器的边缘也不会与其内容的边缘折叠。

### 布局：
a.弹性盒子中的子元素可以在各个方向上进行布局，并且能以弹性尺寸来适应显示空间。
b.由于元素的显示顺序可以与它们在源代码中的顺序无关，定位子元素将会变得更容易，并且能够用更简单清晰的代码完成复杂的布局。
c.这种无关性是仅限制于视觉呈现上的，语言顺序以及基于源代码的导航均不受影响

### 弹性盒布局概念
弹性布局是指通过调整其内元素的宽高，从而在任何显示设备上实现对显示空间最佳填充的能力。
弹性容器扩展器内元素来填充可用空间，或将器收缩来避免溢出。

##### 块级布局，行内布局，弹性盒子布局异同点
块级布局更侧重于垂直方向，
行内布局更侧重于水平方向，
弹性盒子布局算法是于方向无关的。

#####块级布局：
对于单独一个页面来说是行之有效的，但是其仍缺乏足够的定义来支持那些必须随
用户代理不同
或设备方向从水平转为垂直等各种变化而变换方向、
调整大小，拉伸、收缩的应用程序组件。

#####弹性盒子布局：
主要适用于应用程序的组件以及小规模的布局

#####栅格布局：针对大规模的布局

####总结：弹性盒子布局和栅格布局为不同用户代理、不同书写模式和其他灵活性要求下的网页应用程序有更好的互操作性而做出的更广泛的努力的一部分。

### 弹性布局相关词汇
弹性容器：Flex container
包含着弹性项目的父元素。通过设置display属性的值为flex或inline-flex来定义弹性容器。

弹性项目：Flex item
弹性容器的每个元素都称为弹性项目。弹性容器直接包含的文本将被包裹成匿名弹性单元。

轴：Axis
每个弹性框布局包含两个轴。
弹性项目沿其依次排列的那跟轴称为主轴（main axis）
垂直于主轴的那根轴称为侧轴（cross axis）
flex-direction确定主轴
justify-content 定义了当前行上，弹性项目沿主轴如何排布
align-items定义了当前行上，弹性项目沿测轴默认如何排布
align-self定义了单个弹性项目在侧轴上应当如何对齐，这个定义会覆盖align-items所确立的默认值

方向：direction
弹性容器的主轴主轴起点（main start）/主轴终点（main end）和侧轴起点（cross start）/侧轴终点（cross end）描述了弹性项目排布的起点和终点
它们具体取决于弹性容器的主轴和侧轴中，由writing-mode确立的方向（从左到右、从右到左，等待）
order属性将元素与序号关联起来，以此决定哪些元素先出现
flex-flow属性是flex-direction和flex-wrap属性的简写，决定弹性项目如何排布。

行：line
根据flex-wrap属性，弹性项目可以排布在单个行或者多个行中或者多个行中。此属性控制侧轴的方向和新行排列的方向

尺寸：dimension
根据弹性容器的主轴与侧轴，弹性项目的宽和高中，对应主轴的称为主轴尺寸main size,对应侧轴的称为侧轴尺寸（cross size）
min-height与min-width属性初始值将为0
flex属性是flex-grow、flex-shrink和flex-basis属性的简写，描述弹性项目的整体伸缩性

